"""malware-passwords archive password cracker - by iam-py-test"""
import os
import sys
import pyzipper
import json
import requests
import argparse
import string

pw_len = 1
chrs = string.printable

def gen_pws(l):
	i = 0
	pw_list = {}
	id = 0
	for c in chrs:
		pw_list[str(id)] = c
		id += 1
	if l > 1:
		while i < l-1:
			for id in pw_list:
				pw_list[id] += chrs[int(id)]
			i += 1
	pw_list_l = []
	for it in pw_list:
		pw_list_l.append(pw_list[it])
	return pw_list_l

parser = argparse.ArgumentParser(description='Crack the password on a password-protected malware archive')
parser.add_argument("file",help="The archive to crack")
args = parser.parse_args()

try:
	os.mkdir("found")
except:
	pass
found_match = False

notdone = True
pw_leng = 1

while notdone:
	try:
		passwords = gen_pws(pw_leng)
		for password in passwords:
			try:
				with pyzipper.AESZipFile(args.file) as zf:
					zf.pwd = password.encode()
					f = zf.extractall("found/{}".format(args.file))
				print("Extracted with password {}".format(password))
				notdone = False
				break
			except:
				pass
		if notdone == False:
			break
	except:
		pass
	pw_leng += 1

